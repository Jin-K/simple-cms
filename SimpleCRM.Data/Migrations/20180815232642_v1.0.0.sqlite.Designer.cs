// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleCRM.Data.Contexts;

namespace SimpleCRM.Data.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20180815232642_v1.0.0.sqlite")]
    partial class v100sqlite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("SimpleCRM.Data.Entities._Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Custom")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Label")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new { Id = 1, Created = new DateTime(2018, 8, 16, 1, 26, 41, 959, DateTimeKind.Local), Custom = 0, Label = "Sociétés" },
                        new { Id = 2, Created = new DateTime(2018, 8, 16, 1, 26, 41, 961, DateTimeKind.Local), Custom = 0, Label = "Contacts" },
                        new { Id = 3, Created = new DateTime(2018, 8, 16, 1, 26, 41, 961, DateTimeKind.Local), Custom = 0, Label = "Projets" },
                        new { Id = 4, Created = new DateTime(2018, 8, 16, 1, 26, 41, 961, DateTimeKind.Local), Custom = 0, Label = "Documents" },
                        new { Id = 5, Created = new DateTime(2018, 8, 16, 1, 26, 41, 961, DateTimeKind.Local), Custom = 0, Label = "Actions" }
                    );
                });

            modelBuilder.Entity("SimpleCRM.Data.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("FullName");

                    b.Property<DateTime?>("LastConnection");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.Property<string>("UserCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SimpleCRM.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SimpleCRM.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SimpleCRM.Data.Entities.Entity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Custom")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int?>("LabelId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.ToTable("Entities");

                    b.HasData(
                        new { Id = 10, Created = new DateTime(2018, 8, 16, 1, 26, 41, 963, DateTimeKind.Local), Custom = 0, LabelId = 1, Name = "Companies" },
                        new { Id = 11, Created = new DateTime(2018, 8, 16, 1, 26, 41, 963, DateTimeKind.Local), Custom = 0, LabelId = 2, Name = "Contacts" },
                        new { Id = 20, Created = new DateTime(2018, 8, 16, 1, 26, 41, 963, DateTimeKind.Local), Custom = 0, LabelId = 3, Name = "Projects" },
                        new { Id = 31, Created = new DateTime(2018, 8, 16, 1, 26, 41, 963, DateTimeKind.Local), Custom = 0, LabelId = 4, Name = "Documents" },
                        new { Id = 32, Created = new DateTime(2018, 8, 16, 1, 26, 41, 963, DateTimeKind.Local), Custom = 0, LabelId = 5, Name = "Actions" }
                    );
                });

            modelBuilder.Entity("SimpleCRM.Data.Entities.Entity", b =>
                {
                    b.HasOne("SimpleCRM.Data.Entities._Label", "Label")
                        .WithMany("Entities")
                        .HasForeignKey("LabelId");
                });
#pragma warning restore 612, 618
        }
    }
}
